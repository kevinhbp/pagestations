plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  id 'com.google.gms.google-services'
  id 'kotlin-android'
  id 'kotlin-kapt'
}

android {
  compileSdk setup.compileSdkVersion
  defaultConfig {
    applicationId "${setup.applicationId}"
    minSdk setup.minSdkVersion
    targetSdk setup.targetSdkVersion
    versionCode setup.versionCode
    versionName "${setup.versionName}"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    buildConfigField 'String', 'BUILD_TIME', "\"${buildTime}\""
  }
  flavorDimensions "default"
  productFlavors {
    production {
      applicationId "${setup.applicationId}"
      resValue 'string', 'app_name', "${setup.appName}"
      buildConfigField 'boolean', 'EnableCrashReport', 'true'
    }
    nightly {
      applicationId "${setup.applicationId}.nightly"
      resValue 'string', 'app_name', "${setup.appName} - Nightly"
      buildConfigField 'boolean', 'EnableCrashReport', 'false'
    }
  }
  signingConfigs {
    release {
      // This block should exists, but intentionally left blank.
      // signingConfigs.release parameters will be populated afterEvaluate
    }
  }
  buildTypes {
    release {
      debuggable false
      shrinkResources true
      minifyEnabled true
      testCoverageEnabled true
      signingConfig signingConfigs.release
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    debug {
      debuggable true
      shrinkResources false
      minifyEnabled false
      testCoverageEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    android.applicationVariants.all { variant ->
      variant.outputs.all {
        outputFileName =
            "${setup.appName}-${variant.versionName}-${variant.flavorName}-${variant.buildType.name}.apk"
      }
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  buildFeatures {
    dataBinding = true
  }
}

dependencies {
  implementation fileTree(include: ['*.aar'], dir: 'libs')
  // Android
  implementation "androidx.core:core-ktx:$mCoreKtx"
  implementation "androidx.appcompat:appcompat:$mAppCompat"
  implementation "androidx.browser:browser:$mBrowser"
  // Google
  implementation "com.google.android.material:material:$mGoogleMaterial"
  implementation platform('com.google.firebase:firebase-bom:29.2.0')
  implementation 'com.google.firebase:firebase-analytics-ktx'
  // Koin
  implementation "io.insert-koin:koin-core:$mKoin"
  implementation "io.insert-koin:koin-android:$mKoin"
  testImplementation "io.insert-koin:koin-test:$mKoin"
  // Reactive
  implementation "io.reactivex.rxjava2:rxandroid:$mRxAndroid"
  implementation "io.reactivex.rxjava2:rxkotlin:$mRxKotlin"
  // Networking
  implementation "com.squareup.retrofit2:retrofit:$mRetrofit"
  implementation "com.squareup.retrofit2:converter-moshi:$mRetrofit"
  implementation "com.squareup.okhttp3:okhttp:$mOkHttp"
  implementation "com.squareup.okhttp3:logging-interceptor:$mOkHttp"
  // Coroutine
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$mKotlinxCoroutines"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$mKotlinxCoroutines"
  // Chuck Library
  debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
  releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'
  // Test
  testImplementation "junit:junit:$mJunit"
  androidTestImplementation "androidx.test.ext:junit:$mExtJunit"
  androidTestImplementation "androidx.test.espresso:espresso-core:$mExpressoCore"
  // Module
  implementation project(':hello-core')
}